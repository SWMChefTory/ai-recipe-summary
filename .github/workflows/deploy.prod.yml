name: cheftory-ai-recipe-summary-server production CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-docker-image:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      #  Docker 이미지 빌드
      - name: docker image build
        run: docker build -f ./docker/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/cheftory-ai-recipe-summary-server:latest .

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      #  Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/cheftory-ai-recipe-summary-server:latest

  deploy:
    environment: production
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH to EC2 and create folder
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p cheftory-ai-recipe-summary-server/docker

      - name: Create .env on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/cheftory-ai-recipe-summary-server
            cat <<EOF > .env
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            BEDROCK_MODEL_ID=${{ secrets.BEDROCK_MODEL_ID }}
            BEDROCK_INFERENCE_PROFILE_ARN=${{ secrets.BEDROCK_INFERENCE_PROFILE_ARN }}
            EOF

      - name: Copy docker-compose.prod.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./docker/docker-compose.prod.yml"
          target: "/home/ubuntu/cheftory-ai-recipe-summary-server/"
          strip_components: 0

      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/cheftory-ai-recipe-summary-server

            # Docker Hub 로그인
            echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | sudo docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

            # compose 내 이미지 이름 치환 (placeholder → 실제 레지스트리)
            sed -i "s|image: cheftory-ai-recipe-summary-server:latest|image: ${{ secrets.DOCKER_HUB_USERNAME }}/cheftory-ai-recipe-summary-server:latest|g" docker-compose.prod.yml

            # 기존 컨테이너 정리
            sudo docker-compose -f docker-compose.prod.yml stop || true
            sudo docker-compose -f docker-compose.prod.yml rm -f || true
            sudo docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/cheftory-ai-recipe-summary-server:latest || true

            # 새 이미지 pull 및 실행
            sudo docker-compose -f docker-compose.prod.yml --env-file ../.env pull
            sudo docker-compose -f docker-compose.prod.yml --env-file ../.env up -d
